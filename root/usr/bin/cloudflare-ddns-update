#!/bin/sh

# 获取配置
enabled=$(uci -q get cloudflare-ddns.config.enabled)
api_token=$(uci -q get cloudflare-ddns.config.api_token)
domain=$(uci -q get cloudflare-ddns.config.domain)
record_type=$(uci -q get cloudflare-ddns.config.record_type)
ip_source=$(uci -q get cloudflare-ddns.config.ip_source)
interface=$(uci -q get cloudflare-ddns.config.interface)
proxied=$(uci -q get cloudflare-ddns.config.proxied)

[ "$enabled" = "0" ] && exit 0

# 获取根域名
get_root_domain() {
    local domain=$1
    local longest_match=""
    
    while [ -n "$domain" ]; do
        zone_check=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=$domain" \
            -H "Authorization: Bearer $api_token" \
            -H "Content-Type: application/json")
        if echo "$zone_check" | grep -q '"total_count":1'; then
            echo "$domain"
            return 0
        fi
        domain=${domain#*.}
    done
    return 1
}

# 获取当前IP
get_current_ip() {
    if [ "$ip_source" = "interface" ]; then
        if [ "$record_type" = "A" ]; then
            ip -4 addr show dev "$interface" 2>/dev/null | awk '/inet/ {split($2,a,"/"); print a[1]}' | head -n1
        else
            ip -6 addr show dev "$interface" 2>/dev/null | awk '/inet6/ && !/fe80/ {split($2,a,"/"); print a[1]}' | head -n1
        fi
    else
        if [ "$record_type" = "A" ]; then
            curl -s http://4.ipw.cn
        else
            curl -s http://6.ipw.cn
        fi
    fi
}

# 获取或创建DNS记录
get_or_create_record() {
    local zone_id=$1
    local domain=$2
    local record_type=$3
    local current_ip=$4
    local proxied=$5
    
    # 获取现有记录
    local response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records?type=$record_type&name=$domain" \
         -H "Authorization: Bearer $api_token" \
         -H "Content-Type: application/json")
    
    if echo "$response" | grep -q '"count":0'; then
        # 创建新记录
        logger -t cloudflare-ddns "Creating new DNS record for $domain"
        response=$(curl -s -X POST "https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records" \
             -H "Authorization: Bearer $api_token" \
             -H "Content-Type: application/json" \
             --data "{\"type\":\"$record_type\",\"name\":\"$domain\",\"content\":\"$current_ip\",\"proxied\":$proxied}")
    fi
    
    echo "$response" | grep -o '"id":"[^"]*"' | head -n1 | sed 's/"id":"\([^"]*\)"/\1/'
}

# 主逻辑
main() {
    # 获取根域名
    local root_domain=$(get_root_domain "$domain")
    [ -z "$root_domain" ] && { logger -t cloudflare-ddns "Error: Could not determine root domain for $domain"; exit 1; }
    
    # 获取Zone ID
    local zone_response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=$root_domain" \
         -H "Authorization: Bearer $api_token" \
         -H "Content-Type: application/json")
    local zone_id=$(echo "$zone_response" | grep -o '"id":"[^"]*"' | head -n1 | sed 's/"id":"\([^"]*\)"/\1/')
    [ -z "$zone_id" ] && { logger -t cloudflare-ddns "Error: Could not get Zone ID for domain $root_domain"; exit 1; }
    
    # 获取当前IP
    local current_ip=$(get_current_ip)
    [ -z "$current_ip" ] && { logger -t cloudflare-ddns "Error: Could not get IP address"; exit 1; }
    
    # 设置proxied的JSON值
    [ "$proxied" = "1" ] && proxied_json="true" || proxied_json="false"
    
    # 获取或创建DNS记录
    local dns_record_id=$(get_or_create_record "$zone_id" "$domain" "$record_type" "$current_ip" "$proxied_json")
    [ -z "$dns_record_id" ] && { logger -t cloudflare-ddns "Error: Could not get or create DNS record"; exit 1; }
    
    # 更新DNS记录
    local update_response=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_id/dns_records/$dns_record_id" \
         -H "Authorization: Bearer $api_token" \
         -H "Content-Type: application/json" \
         --data "{\"type\":\"$record_type\",\"name\":\"$domain\",\"content\":\"$current_ip\",\"proxied\":$proxied_json}")
    
    if echo "$update_response" | grep -q '"success":true'; then
        logger -t cloudflare-ddns "Successfully updated DNS record for $domain to $current_ip"
    else
        logger -t cloudflare-ddns "Failed to update DNS record: $update_response"
        exit 1
    fi
}

main 
