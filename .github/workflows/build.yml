name: Build OpenWrt Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.0)'
        required: true
        default: '1.0.0'
      description:
        description: '更新说明'
        required: false
        default: '常规更新'

# 添加权限配置
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup OpenWrt SDK
      run: |
        SDK_URL="https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/openwrt-sdk-22.03.5-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz"
        SDK_FILE="openwrt-sdk.tar.xz"
        SDK_FOLDER="openwrt-sdk-22.03.5-x86-64_gcc-11.2.0_musl.Linux-x86_64"
        
        echo "Downloading SDK..."
        wget -O "$SDK_FILE" "$SDK_URL"
        
        echo "Extracting SDK..."
        tar xf "$SDK_FILE"
        
        echo "Checking extracted contents..."
        ls -la
        
        if [ -d "$SDK_FOLDER" ]; then
          echo "Moving SDK folder..."
          mv "$SDK_FOLDER" sdk
        else
          echo "Error: SDK folder not found!"
          echo "Contents of current directory:"
          ls -la
          exit 1
        fi
        
    - name: Install Dependencies
      run: |
        cd sdk
        
        echo "Original feeds configuration:"
        cat feeds.conf.default
        
        # 备份原始配置
        cp feeds.conf.default feeds.conf.default.bak
        
        # 清理现有配置
        > feeds.conf.default
        
        # 添加需要的feeds源
        cat > feeds.conf.default << EOF
        src-git packages https://git.openwrt.org/feed/packages.git;openwrt-22.03
        src-git luci https://git.openwrt.org/project/luci.git;openwrt-22.03
        src-git routing https://git.openwrt.org/feed/routing.git;openwrt-22.03
        src-git telephony https://git.openwrt.org/feed/telephony.git;openwrt-22.03
        EOF
        
        echo "New feeds configuration:"
        cat feeds.conf.default
        
        echo "Updating and installing feeds..."
        ./scripts/feeds clean
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
        echo "Installed packages:"
        ./scripts/feeds list -i
        
    - name: Prepare Package
      run: |
        echo "Current directory contents:"
        ls -la
        
        echo "Creating package directory..."
        mkdir -p sdk/package/luci-app-cloudflare-ddns
        
        echo "Copying files..."
        cp -rv Makefile luasrc root sdk/package/luci-app-cloudflare-ddns/
        
        echo "Setting file permissions..."
        chmod 755 sdk/package/luci-app-cloudflare-ddns/root/etc/init.d/cloudflare-ddns
        chmod 755 sdk/package/luci-app-cloudflare-ddns/root/usr/bin/cloudflare-ddns-update
        chmod 755 sdk/package/luci-app-cloudflare-ddns/root/etc/uci-defaults/luci-cloudflare-ddns
        
        echo "Package directory contents:"
        ls -la sdk/package/luci-app-cloudflare-ddns/
        
    - name: Build Package
      run: |
        cd sdk
        echo "Making defconfig..."
        make defconfig
        
        echo "Installing required packages..."
        make package/feeds/luci/luci-base/compile V=s
        make package/feeds/packages/curl/compile V=s
        
        echo "Building package..."
        make package/luci-app-cloudflare-ddns/compile V=sc || {
          echo "Build failed. Checking logs..."
          find . -name "*.log" -exec cat {} \;
          exit 1
        }
        
        echo "Build output directory contents:"
        ls -R bin/packages/
        
    - name: Upload IPK
      uses: actions/upload-artifact@v3
      with:
        name: luci-app-cloudflare-ddns
        path: sdk/bin/packages/*/base/luci-app-cloudflare-ddns_*.ipk
        
    - name: Create Release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        files: sdk/bin/packages/*/base/luci-app-cloudflare-ddns_*.ipk
        tag_name: v${{ github.event.inputs.version }}
        body: |
          版本: v${{ github.event.inputs.version }}
          ${{ github.event.inputs.description }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
